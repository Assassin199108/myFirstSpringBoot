#server 服务器端配置
#server.port=9090
#server.context-path=
##ssl套接字配置
#server.ssl.key-store=
#server.ssl.key-store-password=
#server.ssl.key-store-type=JKS
#数据库的配置
spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
spring.datasource.url=jdbc:oracle:thin:@localhost:1521:xe
spring.datasource.username=surf
spring.datasource.password=surf
##JPA的配置
###启动时会根据实体类生成表，大概实体类属性变动的时候，表结构也会更新，在初期开发阶段使用
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
###默认
spring.data.jpa.repositories.enabled=true
##让控制器输出的json字符串格式更美观
spring.jackson.serialization.indent-output=true


##data rest配置
###定制跟路径
spring.data.rest.base-path=/api

##MongoDb的配置
###数据库主机地址
spring.data.mongodb.host=localhost
###数据库连接断开默认27107
spring.data.mongodb.port=27017
###连接uri #Mongo database URI. When set, host and port are ignored.
spring.data.mongodb.uri=mongodb://localhost/test
###repository支持是否开启 默认为以开
spring.data.mongodb.repositories.enabled=true
###用户名
#spring.data.mongodb.username=
###密码
#spring.data.mongodb.password=
###指定要使用的FieldNamingStrategy 属性名称策略
#spring.data.mongodb.field-naming-strategy=
###数据库
#spring.data.mongodb.database=test
### GridFS database name. 指定GridFS database的名称.
#spring.data.mongodb.grid-fs-database=
###指定鉴权的数据库名
#spring.data.mongodb.authentication-database=

##Redis的配置
###数据库名称，默认为0
spring.redis.database=0
###服务器地址，默认为localhost
spring.redis.host=localhost
###默认为空  除非自己设置redis密码
spring.redis.password=
###redis默认端口号
spring.redis.port=6379
###控制一个pool最多有多少个状态为idle的jedis实例
spring.redis.pool.max-idle=8
###制一个pool最少有多少个状态为idle的jedis实例
spring.redis.pool.min-idle=1
###控制一个pool可分配多少个jedis实例，通过pool.getResource()来获取；如果赋值为-1，则表示不限制；如果pool已经分配了maxActive个jedis实例，则此时pool的状态就成exhausted了，在JedisPoolConfig
spring.redis.pool.max-active=8
###表示当borrow一个jedis实例时，最大的等待时间，如果超过等待时间，则直接抛出JedisConnectionException
spring.redis.pool.max-wait=-1
###主从配置  哨兵模式
###主服务器的名称
#spring.redis.sentinel.master=
###从服务的 host:port 例如：127.0.0.1:26379,127.0.0.1:26479,127.0.0.1:26579
#spring.redis.sentinel.nodes=
###客户端空闲N秒后断开连接，参数0表示不启用  毫秒级
spring.redis.timeout=0

########################
#######!!!缓存!!!#######
#######################
###可选缓存技术的类型
spring.cache.type=ehcache
###程序启动时创建的缓存名称
spring.cache.cache-names=ehcache-wang
###ehcache配置文件地址
spring.cache.ehcache.config=ehcache.xml
###hazelcast配置文件地址
#spring.cache.hazelcast.config=ehcache.xml
###infinispan配置文件地址
#spring.cache.infinispan.config=ehcache.xml
###jcache配置文件地址
#spring.cache.jcache.config=ehcache.xml
###当多个jcache实现在类路径的时候，指定jcache实现
#spring.cache.jcache.provider=
###guava的配置
#spring.cache.guava.spec=

###****************************
##********安全领域**************
###****************************
#security
###内存中的默认账号
security.user.name=user
###默认用户的密码
security.user.password=
###默认用户的角色
security.user.role=USER
###是否需要支持ssl
security.require-ssl=false
###是否开启跨站请求伪造支持，默认关闭
security.enable-csrf=false
###启用基本身份认证
security.basic.enabled=true
###HTTP基本realm
security.basic.realm=Spring
### 拦截策略，以逗号分隔
security.basic.path=/security/**
###应用授权模式，ROLE=成员必须是安全的角色，AUTHENTICATED=经过身份验证的用户，NONE=没有设置安全授权
security.basic.authorize-mode=role
###过滤器执行顺序
security.filter-order=0
### 启用跨域脚本 (XSS) 保护.
security.headers.xss=true
###启用缓存控制 HTTP headers.
security.headers.cache=true
###启用 "X-Frame-Options" header.
security.headers.frame=true
###启用 "X-Content-Type-Options" header.
security.headers.content-type=true
###HTTP Strict Transport Security (HSTS) mode (none, domain, all).
security.headers.hsts=all
###Session 创建策略(always, never, if_required, stateless).
security.sessions=STATELESS
### 安全策略，以逗号分隔,无需拦截的路径
security.ignored=
###security 过滤器链dispatcher类型
#security.filter-dispatcher-types=

############################
############日志############
###########################
logging.file=/Users/wangwei/Documents/gitRepositiry/myFirstSpringBoot/log.log
logging.level.org.springfremework.web=INFO
logging.level.org.springframework.security=info

##########################
#########消息中间件########
#########################
##ActiveMQ
###指定ActiveMQ broker的URL，默认自动生成.
spring.activemq.broker-url=tcp://localhost:61616
spring.activemq.user=admin
###指定broker的密码.
spring.activemq.password=admin
###是否是内存模式
spring.activemq.in-memory=true
###是否创建PooledConnectionFactory，而非ConnectionFactory，默认false
spring.activemq.pooled=false
##RabbitMQ
spring.rabbitmq.host=localhost
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest
spring.rabbitmq.port=5672
###是否创建AmqpAdmin bean
spring.rabbitmq.dynamic=true
###指定client连接到的server的地址，多个以逗号分隔.
spring.rabbitmq.addresses=
###指定连接到broker的Virtual host
spring.rabbitmq.virtual-host=
###指定心跳超时，0为不指定.
spring.rabbitmq.requested-heartbeat=0
###ssl 的运算法则
spring.rabbitmq.ssl.algorithm=
###是否开始SSL，默认: false)
spring.rabbitmq.ssl.enabled=false
###指定持有SSL certificate的key store的路径
spring.rabbitmq.ssl.key-store=
###指定访问key store的密码.
spring.rabbitmq.ssl.key-store-password=
###指定持有SSL certificates的Trust store.
spring.rabbitmq.ssl.trust-store=
###指定访问trust store的密码.
spring.rabbitmq.ssl.trust-store-password=
###是否在启动时就启动mq，默认: true)
spring.rabbitmq.listener.auto-startup=true
###指定Acknowledge的模式.
####NONE：不会发送任何ack
####MANUAL：侦听器必须通过调用channel.basicAck()来确认所有消息
####AUTO:容器将自动地接收消息，除非MessageListener抛出异常
spring.rabbitmq.listener.acknowledge-mode=auto
###指定最小的消费者数量.
spring.rabbitmq.listener.concurrency=1
###指定最大的消费者数量.
spring.rabbitmq.listener.max-concurrency=10
###指定一个请求能处理多少个消息，如果有事务的话，必须大于等于transaction数量
spring.rabbitmq.listener.prefetch=10
###指定一个事务处理的消息数量，最好是小于等于prefetch的数量.
spring.rabbitmq.listener.transaction-size=5

#Profile配置
#spring.profiles.active=prod

#查看当前项目中已启用和未启用的自动配置
debug=true

#http server
spring.http.encoding.charset=utf-8
spring.http.encoding.enabled=true
spring.http.encoding.force=true

#MVC的配置

##ico配置
spring.mvc.favicon.enabled=false

#########################
#######渲染引擎###########
########################
#spring.thymeleaf.prefix="views"
###开发阶段关闭渲染模板引擎缓存
#spring.thymeleaf.cache=false


#######################
#######端点 监控#######
######################
endpoints.shutdown.enabled=true
###定制端点访问路径 默认是在跟目录
management.context-path=/endpoint
###定制端点访问端口 ###关闭http端点 -1
#management.port=8082
##定制端点
###我们访问beans的名称自己定义
endpoints.beans.id=mybeans
###关闭beans端点
endpoints.beans.enabled=false

##ssh监控


#自己建的Spring boot配置常量
hello.msg=wangwei!
book.author=wangwei
book.name=firstSpringBoot